1.下载Git：https://git-scm.com/downloads
2.安装Git
3.打开Git命令行：开始->Git->Git Bash
4.设置姓名、邮箱
git config --global user.name "Your Name"
git config --global user.email "email@example.com"
5.将当前目录变成Git可以管理的仓库
git init
6.把文件添加到git仓库（暂存区stage）
git add 文件名.文件类型
7.把文件提交到git仓库（当前分支）
git commit -m "本次提交说明"
8.查看git仓库当前状态
git status
9.查看指定文件的修改内容
git diff 文件名.文件类型
10.提交修改
git add 文件名.文件类型
git commit -m "本次提交说明"
11.查看提交日志（按时间倒序），包含提交操作版本号（16进制SHA1）、作者、时间
git log
12.查看提交日志（精简版）
git log --pretty=oneline
13.回退到上一个版本
git reset --hard HEAD^
14.回退到前n个版本
git reset --hard HEAD~n
15.回退到指定版本
git reset --hard 提交操作版本号
16.查看操作记录
git reflog
17.查看工作区指定文件和版本库中最新版本的区别
git diff HEAD -- 文件名.文件类型
18.撤销工作区（本地）指定文件的修改
git checkout -- 文件名.文件类型
19.把add到暂存区stage的修改回退到工作区
git reset HEAD 文件名.文件类型
20.删除版本库中的文件
git rm 文件名.文件类型
git commit -m "本次提交说明"
21.创建SSH Key（生成的Key保存在/系统盘/用户/用户名/.ssh）
ssh-keygen -t rsa -C "邮箱"
22.将SSH Key添加到个人GitHub
登录GitHub->Settings->SSH and GPG keys->new SSH key
自定义Title，Key文本框中添加id_rsa.pub文件的内容
Add key
23.将本地Git仓库与GitHub的远程仓库（.git结尾）关联
git remote add origin GitHub仓库地址 #origin为远程仓库名
24.查看远程仓库信息
git remote -v
25.删除本地仓库与远程仓库的关联
git remote rm origin
26.把提交到本地Git仓库的内容推送到远程仓库（主分支）
git push -u origin master #第一次
git push origin master #后续提交
git push origin 分支名 #推送到远程仓库的指定分支
27.将远程仓库克隆到本地
git clone GitHub仓库地址
28.创建分支
git branch 分支名
29.查看分支（*为当前分支）
git branch
30.切换分支
git checkout 分支名
31.创建并切换分支
git checkout -b 分支名
32.创建和远程仓库分支对应的分支
git checkout -b 分支名 origin/远程仓库分支名
33.合并指定分支到当前分支（默认使用Fast forward模式）
git merge 分支名
34.删除指定分支（已执行过合并操作）
git branch -d 分支名
35.强制删除指定分支（未执行过合并操作）
git branch -D 分支名
36.查看分支合并图
git log --graph
37.合并指定分支到当前分支（使用普通模式），并创建一个新的commit
git merge --no-ff -m "本次提交说明" 分支名
38.隐藏工作区的修改
git stash
39.查看工作区隐藏的修改列表
git stash list
40.恢复工作区隐藏的指定修改内容
git stash apply <stash_id> #恢复后不删除stash的内容
git stash pop <stash_id> #恢复后删除stash的内容
41.创建本地仓库的分支与远程仓库的分支的链接关系
git branch --set-upstream-to=origin/远程仓库分支名 本地仓库分支名
42.从远程仓库抓取当前分支的最新提交
git pull
git remote -v
43.将本地未push的分叉提交历史整理成直线
git rebase
#目的：使我们在查看历史提交的变化时更容易，因为分叉的提交需要三方对比。
44.给当前分支的最新提交创建标签
git tag 标签名 #例：v1.0
git tag -a 标签名 -m "标签说明" #创建带有说明的标签
45.对当前分支的指定提交创建标签
git tag 标签名 提交操作版本号
46.查看当前分支的所有标签
git tag
47.查看标签信息
git show 标签名
48.删除本地指定标签
git tag -d 标签名
49.将指定标签推送到远程仓库
git push origin 标签名
git push origin --tags #将所有本地标签推送到远程仓库
50.删除远程仓库的指定标签
git tag -d 标签名
git push origin :refs/tags/标签名

==================================================================
其他命令：
1.在当前目录下创建目录
mkdir 目录名称
2.进入目录
cd 目录名称
3.显示当前目录
pwd
4.显示当前目录下的可见文件及目录
ls
5.显示当前目录下的全部文件及文件夹（包括隐藏的文件及目录）
ls -ah
6.打开文件
cat 文件名.文件类型
7.删除文件
rm 文件名.文件类型

